{"version":3,"file":"main.js","mappings":"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","sources":["webpack://my-webpack-project/./src/components/base/productAPI.ts","webpack://my-webpack-project/./src/components/base/api.ts","webpack://my-webpack-project/./src/utils/constants.ts","webpack://my-webpack-project/./src/utils/utils.ts","webpack://my-webpack-project/./src/components/base/events.ts","webpack://my-webpack-project/./src/index.ts"],"sourcesContent":["import { Api } from './api';\nexport class ProductAPI extends Api {\n    constructor(cdn, baseUrl, options) {\n        super(baseUrl, options);\n        this.cdn = cdn;\n    }\n    getProductItem(id) {\n        return this.get(`/product/${id}`).then((item) => (Object.assign(Object.assign({}, item), { image: this.cdn + item.image })));\n    }\n    getProductList() {\n        return this.get('/product').then((data) => data.items.map((item) => (Object.assign(Object.assign({}, item), { image: this.cdn + item.image }))));\n    }\n    orderProduct(order) {\n        return this.post('/order', order).then((data) => data);\n    }\n}\n","export class Api {\n    constructor(baseUrl, options = {}) {\n        var _a;\n        this.baseUrl = baseUrl;\n        this.options = {\n            headers: Object.assign({ 'Content-Type': 'application/json' }, ((_a = options.headers) !== null && _a !== void 0 ? _a : {}))\n        };\n    }\n    handleResponse(response) {\n        if (response.ok)\n            return response.json();\n        else\n            return response.json()\n                .then(data => { var _a; return Promise.reject((_a = data.error) !== null && _a !== void 0 ? _a : response.statusText); });\n    }\n    get(uri) {\n        return fetch(this.baseUrl + uri, Object.assign(Object.assign({}, this.options), { method: 'GET' })).then(this.handleResponse);\n    }\n    post(uri, data, method = 'POST') {\n        return fetch(this.baseUrl + uri, Object.assign(Object.assign({}, this.options), { method, body: JSON.stringify(data) })).then(this.handleResponse);\n    }\n}\n","export const API_URL = `${process.env.API_ORIGIN}/api/weblarek`;\nexport const CDN_URL = `${process.env.API_ORIGIN}/content/weblarek`;\nexport const settings = {\n    templateCard: 'card-catalog',\n    templatePrev: 'card-preview',\n    templateBask: 'card-basket',\n    basketTemplate: 'basket',\n    orderTemplate: 'order',\n    contactsTemplate: 'contacts',\n    successTemplate: 'success',\n    modalTemplate: 'modal' // template id - modal\n};\n","export function pascalToKebab(value) {\n    return value.replace(/([a-z0–9])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\nexport function isSelector(x) {\n    return (typeof x === \"string\") && x.length > 1;\n}\nexport function isEmpty(value) {\n    return value === null || value === undefined;\n}\nexport function ensureAllElements(selectorElement, context = document) {\n    if (isSelector(selectorElement)) {\n        return Array.from(context.querySelectorAll(selectorElement));\n    }\n    if (selectorElement instanceof NodeList) {\n        return Array.from(selectorElement);\n    }\n    if (Array.isArray(selectorElement)) {\n        return selectorElement;\n    }\n    throw new Error(`Unknown selector element`);\n}\nexport function ensureElement(selectorElement, context) {\n    if (isSelector(selectorElement)) {\n        const elements = ensureAllElements(selectorElement, context);\n        if (elements.length > 1) {\n            console.warn(`selector ${selectorElement} return more then one element`);\n        }\n        if (elements.length === 0) {\n            throw new Error(`selector ${selectorElement} return nothing`);\n        }\n        return elements.pop();\n    }\n    if (selectorElement instanceof HTMLElement) {\n        return selectorElement;\n    }\n    throw new Error('Unknown selector element');\n}\nexport function cloneTemplate(query) {\n    const template = ensureElement(query);\n    return template.content.firstElementChild.cloneNode(true);\n}\nexport function bem(block, element, modifier) {\n    let name = block;\n    if (element)\n        name += `__${element}`;\n    if (modifier)\n        name += `_${modifier}`;\n    return {\n        name,\n        class: `.${name}`\n    };\n}\nexport function getObjectProperties(obj, filter) {\n    return Object.entries(Object.getOwnPropertyDescriptors(Object.getPrototypeOf(obj)))\n        .filter(([name, prop]) => filter ? filter(name, prop) : (name !== 'constructor'))\n        .map(([name, prop]) => name);\n}\n/**\n * Устанавливает dataset атрибуты элемента\n */\nexport function setElementData(el, data) {\n    for (const key in data) {\n        el.dataset[key] = String(data[key]);\n    }\n}\n/**\n * Получает типизированные данные из dataset атрибутов элемента\n */\nexport function getElementData(el, scheme) {\n    const data = {};\n    for (const key in el.dataset) {\n        data[key] = scheme[key](el.dataset[key]);\n    }\n    return data;\n}\n/**\n * Проверка на простой объект\n */\nexport function isPlainObject(obj) {\n    const prototype = Object.getPrototypeOf(obj);\n    return prototype === Object.getPrototypeOf({}) ||\n        prototype === null;\n}\nexport function isBoolean(v) {\n    return typeof v === 'boolean';\n}\n/**\n * Фабрика DOM-элементов в простейшей реализации\n * здесь не учтено много факторов\n * в интернет можно найти более полные реализации\n */\nexport function createElement(tagName, props, children) {\n    const element = document.createElement(tagName);\n    if (props) {\n        for (const key in props) {\n            const value = props[key];\n            if (isPlainObject(value) && key === 'dataset') {\n                setElementData(element, value);\n            }\n            else {\n                // @ts-expect-error fix indexing later\n                element[key] = isBoolean(value) ? value : String(value);\n            }\n        }\n    }\n    if (children) {\n        for (const child of Array.isArray(children) ? children : [children]) {\n            element.append(child);\n        }\n    }\n    return element;\n}\n","/**\n * Брокер событий, классическая реализация\n * В расширенных вариантах есть возможность подписаться на все события\n * или слушать события по шаблону например\n */\nexport class EventEmitter {\n    constructor() {\n        this._events = new Map();\n    }\n    /**\n     * Установить обработчик на событие\n     */\n    on(eventName, callback) {\n        var _a;\n        if (!this._events.has(eventName)) {\n            this._events.set(eventName, new Set());\n        }\n        (_a = this._events.get(eventName)) === null || _a === void 0 ? void 0 : _a.add(callback);\n    }\n    /**\n     * Снять обработчик с события\n     */\n    off(eventName, callback) {\n        var _a;\n        if (this._events.has(eventName)) {\n            this._events.get(eventName).delete(callback);\n            if (((_a = this._events.get(eventName)) === null || _a === void 0 ? void 0 : _a.size) === 0) {\n                this._events.delete(eventName);\n            }\n        }\n    }\n    /**\n     * Инициировать событие с данными\n     */\n    emit(eventName, data) {\n        this._events.forEach((subscribers, name) => {\n            if (name instanceof RegExp && name.test(eventName) || name === eventName) {\n                subscribers.forEach(callback => callback(data));\n            }\n        });\n    }\n    /**\n     * Слушать все события\n     */\n    onAll(callback) {\n        this.on(\"*\", callback);\n    }\n    /**\n     * Сбросить все обработчики\n     */\n    offAll() {\n        this._events = new Map();\n    }\n    /**\n     * Сделать коллбек триггер, генерирующий событие при вызове\n     */\n    trigger(eventName, context) {\n        return (event = {}) => {\n            this.emit(eventName, Object.assign(Object.assign({}, (event || {})), (context || {})));\n        };\n    }\n}\n","import './scss/styles.scss';\nimport { ProductAPI } from './components/base/productAPI';\nimport { API_URL, CDN_URL } from './utils/constants';\nimport { settings } from './utils/constants';\nimport { ensureElement } from './utils/utils';\nimport { EventEmitter } from './components/base/events';\nconst api = new ProductAPI(CDN_URL, API_URL);\nconst events = new EventEmitter();\nconst cardCatalogTemplate = ensureElement(`#${settings.templateCard}`);\nconst cardPrevTemplate = ensureElement(`#${settings.templatePrev}`);\nconst cardBaskTemplate = ensureElement(`#${settings.templateBask}`);\nconst basketTemplate = ensureElement(`#${settings.basketTemplate}`);\nconst orderTemplate = ensureElement(`#${settings.orderTemplate}`);\nconst contactsTemplate = ensureElement(`#${settings.contactsTemplate}`);\nconst successTemplate = ensureElement(`#${settings.successTemplate}`);\nconst modalTemplate = ensureElement(`#${settings.modalTemplate}`);\n"],"names":["ProductAPI","_Api","_inherits","_super","_createSuper","cdn","baseUrl","options","_this","_classCallCheck","call","_createClass","key","value","getProductItem","id","_this2","this","get","concat","then","item","Object","assign","image","getProductList","_this3","data","items","map","orderProduct","order","post","Api","_a","arguments","length","undefined","headers","handleResponse","response","ok","json","Promise","reject","error","statusText","uri","fetch","method","body","JSON","stringify","API_URL","process","CDN_URL","settings","isSelector","x","ensureElement","selectorElement","context","elements","ensureAllElements","document","Array","from","querySelectorAll","NodeList","isArray","Error","console","warn","pop","HTMLElement","EventEmitter","_events","Map","on","eventName","callback","has","set","Set","add","off","size","emit","forEach","subscribers","name","RegExp","test","onAll","offAll","trigger","event"],"sourceRoot":""}